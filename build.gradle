plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '2.5.1'
group = 'net.parker8283'
archivesBaseName = 'BowInfinityFix'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.19.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'bowinfinityfix'
            mods {
                bowinfinityfix {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'bowinfinityfix'
            mods {
                bowinfinityfix {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'bowinfinityfix'
            mods {
                bowinfinityfix {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'bowinfinityfix', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                bowinfinityfix {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.1-42.0.9'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "bowinfinityfix",
            "Specification-Vendor": "parker8283",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Vendor" :"Parker8283",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    from ("LICENSE") { rename { "${it}_${project.archivesBaseName}" } }
    archiveAppendix.set "1.19.x-forge"
}
jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
